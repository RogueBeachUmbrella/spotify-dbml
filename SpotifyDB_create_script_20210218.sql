-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE public.album
(
    album_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    album_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    id text NOT NULL,
    album_group text NOT NULL,
    album_type text NOT NULL,
    name text NOT NULL,
    release_date text NOT NULL,
    release_date_precision text NOT NULL,
    total_tracks integer NOT NULL,
    type text NOT NULL,
    uri text NOT NULL,
    spotify_url text NOT NULL,
    PRIMARY KEY (album_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.album_artist
(
    album_artist_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    album_artist_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    artist_id integer NOT NULL,
    album_id integer NOT NULL,
    PRIMARY KEY (album_artist_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.album_image
(
    album_image_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    album_image_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    album_id integer NOT NULL,
    height integer NOT NULL,
    url text NOT NULL,
    width integer NOT NULL,
    PRIMARY KEY (album_image_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.artist
(
    artist_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    artist_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    id text NOT NULL,
    name text NOT NULL,
    popularity integer NOT NULL,
    type text NOT NULL,
    uri text NOT NULL,
    followers integer NOT NULL,
    spotify_url text NOT NULL,
    PRIMARY KEY (artist_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.artist_genre
(
    artist_genre_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    artist_genre_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    artist_id integer NOT NULL,
    genre_id integer,
    PRIMARY KEY (artist_genre_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.artist_image
(
    artist_image_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    artist_image_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    artist_id integer NOT NULL,
    height integer NOT NULL,
    url text NOT NULL,
    width integer NOT NULL,
    PRIMARY KEY (artist_image_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.chart_track
(
    chart_track_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    chart_track_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    artist_id integer NOT NULL,
    track_id integer NOT NULL,
    "position" integer NOT NULL,
    streams integer NOT NULL,
    country text NOT NULL,
    week_start date NOT NULL,
    week_end date NOT NULL
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.genres
(
    genre_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    genre genre,
    PRIMARY KEY (genre_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.related_artist
(
    related_artist_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    related_artist_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    artist_id integer NOT NULL,
    related_id integer NOT NULL,
    PRIMARY KEY (related_artist_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.track
(
    track_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    track_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    duration_ms integer NOT NULL,
    explicit boolean NOT NULL,
    name text NOT NULL,
    popularity integer NOT NULL,
    preview_url text NOT NULL,
    track_number integer NOT NULL,
    type text NOT NULL,
    uri text NOT NULL,
    spotify_url text NOT NULL,
    id text NOT NULL,
    PRIMARY KEY (track_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.track_album
(
    track_album_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    track_album_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    track_id integer NOT NULL,
    album_id integer NOT NULL,
    disc_number integer NOT NULL,
    track_number integer,
    PRIMARY KEY (track_album_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.track_artist
(
    track_artist_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    track_artist_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    track_id integer NOT NULL,
    artist_id integer NOT NULL,
    PRIMARY KEY (track_artist_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.track_audio_analysis
(
    track_audio_analysis_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    track_audio_analysis_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    track_id integer NOT NULL,
    num_samples integer NOT NULL,
    duration numeric NOT NULL,
    sample_md5 text NOT NULL,
    offset_seconds integer NOT NULL,
    window_seconds integer NOT NULL,
    analysis_sample_rate integer NOT NULL,
    analysis_channels integer NOT NULL,
    end_of_fade_in numeric NOT NULL,
    start_of_fade_out numeric NOT NULL,
    loudness numeric NOT NULL,
    tempo numeric NOT NULL,
    tempo_confidence numeric NOT NULL,
    time_signature integer NOT NULL,
    time_signature_confidence numeric NOT NULL,
    key integer NOT NULL,
    key_confidence numeric NOT NULL,
    mode integer NOT NULL,
    mode_confidence numeric NOT NULL,
    PRIMARY KEY (track_audio_analysis_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.track_bar
(
    track_bar_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    track_bar_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    track_id integer NOT NULL,
    start numeric NOT NULL,
    duration numeric NOT NULL,
    confidence numeric NOT NULL,
    PRIMARY KEY (track_bar_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.track_beat
(
    track_beat_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    track_beat_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    track_id integer NOT NULL,
    start numeric NOT NULL,
    duration numeric NOT NULL,
    confidence numeric NOT NULL,
    PRIMARY KEY (track_beat_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.track_feature
(
    track_feature_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    track_feature_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    track_id integer NOT NULL,
    danceability numeric NOT NULL,
    energy numeric NOT NULL,
    key integer NOT NULL,
    loudness numeric NOT NULL,
    mode integer NOT NULL,
    speechiness numeric NOT NULL,
    acousticness numeric NOT NULL,
    instrumentalness numeric NOT NULL,
    liveness numeric NOT NULL,
    valence numeric NOT NULL,
    tempo numeric NOT NULL,
    duration_ms integer NOT NULL,
    time_signature integer NOT NULL,
    PRIMARY KEY (track_feature_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.track_section
(
    track_section_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    track_section_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    track_id integer NOT NULL,
    start numeric NOT NULL,
    duration numeric NOT NULL,
    confidence numeric NOT NULL,
    loudness numeric NOT NULL,
    tempo numeric NOT NULL,
    tempo_confidence numeric NOT NULL,
    key integer NOT NULL,
    key_confidence numeric NOT NULL,
    mode integer NOT NULL,
    mode_confidence numeric NOT NULL,
    time_signature integer NOT NULL,
    time_signature_confidence numeric NOT NULL,
    PRIMARY KEY (track_section_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.track_segment
(
    track_segment_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    track_segment_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    track_id integer NOT NULL,
    start numeric NOT NULL,
    duration numeric NOT NULL,
    confidence numeric NOT NULL,
    loudness_start numeric NOT NULL,
    loudness_max_time numeric NOT NULL,
    loudness_max numeric NOT NULL,
    loudness_end numeric NOT NULL,
    PRIMARY KEY (track_segment_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.track_segment_pitch
(
    track_segment_pitch_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    track_segment_pitch_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    track_segment_id integer NOT NULL,
    pitch numeric NOT NULL,
    PRIMARY KEY (track_segment_pitch_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.track_segment_timbre
(
    track_segment_timbre_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    track_segment_timbre_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    track_segment_id integer NOT NULL,
    timbre numeric NOT NULL,
    PRIMARY KEY (track_segment_timbre_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.track_tatum
(
    track_tatum_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    track_tatum_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    created_at timestamp without time zone,
    modified_at timestamp without time zone,
    track_id integer NOT NULL,
    start numeric NOT NULL,
    duration numeric NOT NULL,
    confidence numeric NOT NULL,
    PRIMARY KEY (track_tatum_id)
)
WITH (
    OIDS = FALSE
);

ALTER TABLE public.album_artist
    ADD FOREIGN KEY (album_id)
    REFERENCES public.album (album_id)
    NOT VALID;


ALTER TABLE public.album_artist
    ADD FOREIGN KEY (artist_id)
    REFERENCES public.artist (artist_id)
    NOT VALID;


ALTER TABLE public.album_image
    ADD FOREIGN KEY (album_id)
    REFERENCES public.album (album_id)
    NOT VALID;


ALTER TABLE public.artist_genre
    ADD FOREIGN KEY (artist_id)
    REFERENCES public.artist (artist_id)
    NOT VALID;


ALTER TABLE public.artist_image
    ADD FOREIGN KEY (artist_id)
    REFERENCES public.artist (artist_id)
    NOT VALID;


ALTER TABLE public.chart_track
    ADD FOREIGN KEY (artist_id)
    REFERENCES public.artist (artist_id)
    NOT VALID;


ALTER TABLE public.chart_track
    ADD FOREIGN KEY (track_id)
    REFERENCES public.track (track_id)
    NOT VALID;


ALTER TABLE public.related_artist
    ADD FOREIGN KEY (artist_id)
    REFERENCES public.artist (artist_id)
    NOT VALID;


ALTER TABLE public.related_artist
    ADD FOREIGN KEY (related_id)
    REFERENCES public.artist (artist_id)
    NOT VALID;


ALTER TABLE public.track_album
    ADD FOREIGN KEY (album_id)
    REFERENCES public.album (album_id)
    NOT VALID;


ALTER TABLE public.track_album
    ADD FOREIGN KEY (track_id)
    REFERENCES public.track (track_id)
    NOT VALID;


ALTER TABLE public.track_artist
    ADD FOREIGN KEY (artist_id)
    REFERENCES public.artist (artist_id)
    NOT VALID;


ALTER TABLE public.track_artist
    ADD FOREIGN KEY (track_id)
    REFERENCES public.track (track_id)
    NOT VALID;


ALTER TABLE public.track_audio_analysis
    ADD FOREIGN KEY (track_id)
    REFERENCES public.track (track_id)
    NOT VALID;


ALTER TABLE public.track_bar
    ADD FOREIGN KEY (track_id)
    REFERENCES public.track (track_id)
    NOT VALID;


ALTER TABLE public.track_beat
    ADD FOREIGN KEY (track_id)
    REFERENCES public.track (track_id)
    NOT VALID;


ALTER TABLE public.track_feature
    ADD FOREIGN KEY (track_id)
    REFERENCES public.track (track_id)
    NOT VALID;


ALTER TABLE public.track_section
    ADD FOREIGN KEY (track_id)
    REFERENCES public.track (track_id)
    NOT VALID;


ALTER TABLE public.track_segment
    ADD FOREIGN KEY (track_id)
    REFERENCES public.track (track_id)
    NOT VALID;


ALTER TABLE public.track_segment_pitch
    ADD FOREIGN KEY (track_segment_id)
    REFERENCES public.track_segment (track_segment_id)
    NOT VALID;


ALTER TABLE public.track_segment_timbre
    ADD FOREIGN KEY (track_segment_id)
    REFERENCES public.track_segment (track_segment_id)
    NOT VALID;


ALTER TABLE public.track_tatum
    ADD FOREIGN KEY (track_id)
    REFERENCES public.track (track_id)
    NOT VALID;

END;