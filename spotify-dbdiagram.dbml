table artist {
  artist_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  id text [not null]
  name text [not null]
  popularity int [not null]
  type text [not null]
  uri text [not null]
  followers int [not null]
  spotify_url text [not null]
  indexes{
    (artist_id) [pk]
    id [unique]
  }
}

table artist_image {
  artist_image_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  artist_id int [not null, ref: > artist.artist_id]
  height int [not null]
  url text [not null]
  width int [not null]
  indexes{
    (artist_image_id) [pk]
    url [unique]
  }
}

table related_artist {
  related_artist_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  artist_id int [not null, ref: > artist.artist_id]
  related_id int [not null, ref: > artist.artist_id]
  indexes {
    (related_artist_id) 
    (artist_id, related_id) [unique]
  }
}

table artist_genre {
  artist_genre_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  artist_id int [not null, ref: > artist.artist_id]
  genre genre [not null]
  indexes {
    (artist_genre_id) [pk]
    (artist_id, genre) [unique]
  }
}

table album {
  album_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  id text [not null]
  album_group text [not null]
  album_type text [not null]
  name text [not null]
  release_date text [not null]
  release_date_precision text [not null]
  total_tracks int [not null]
  type text [not null]
  uri text [not null]
  spotify_url text [not null]
  indexes {
    (album_id) [pk]
    id [unique]
  }
}

table album_artist {
  album_artist_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  artist_id int [not null, ref: > artist.artist_id]
  album_id int [not null, ref: > album.album_id]
  indexes {
    (album_artist_id) [pk]
    (artist_id, album_id)
  }
}

table album_image {
  album_image_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  album_id int [not null,ref: > album.album_id]
  height int [not null]
  url text [not null]
  width int [not null]
  indexes {
    (album_image_id) [pk]
    (album_id, url)
  }
}

table chart_track {
  chart_track_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  artist_id int [not null, ref: > artist.artist_id]  
  track_id int [not null, ref: > track.track_id]
  position int [not null]
  streams int [not null]
  country text [not null]
  week_start date [not null]
  week_end date [not null]
  
}

table track {
  track_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  duration_ms int [not null]
  explicit boolean [not null]
  name text [not null]
  popularity int [not null]
  preview_url text [not null]
  track_number int [not null]
  type text [not null]
  uri text [not null]
  spotify_url text [not null]
  id text [not null]
  indexes {
    (track_id) [pk]
    id [unique]
  }
}

table track_artist {
  track_artist_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  track_id int [not null, ref: > track.track_id]
  artist_id int [not null, ref: > artist.artist_id]
  indexes {
    (track_artist_id) [pk]
    (track_id, artist_id) [unique]
  }
}

table track_album {
  track_album_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  track_id int [not null, ref: > track.track_id]
  album_id int [not null, ref: > album.album_id]
  disc_number int [not null]
  indexes {
    (track_album_id) [pk]
    (track_id, album_id) [unique]
  }
}

table track_feature {
  track_feature_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  track_id int [not null, ref: > track.track_id]
  danceability numeric [not null]
  energy numeric [not null]
  key int [not null]
  loudness numeric [not null]
  mode int [not null]
  speechiness numeric [not null]
  acousticness numeric [not null]
  instrumentalness numeric [not null]
  liveness numeric [not null]
  valence numeric [not null]
  tempo numeric [not null]
  duration_ms int [not null]
  time_signature int [not null]
  indexes {
    (track_feature_id) [pk]
    track_id [unique]
  }
}

table track_audio_analysis {
  track_audio_analysis_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  track_id int [not null, ref: > track.track_id]
  num_samples int [not null]
  duration numeric [not null]
  sample_md5 text [not null]
  offset_seconds int [not null]
  window_seconds int [not null]
  analysis_sample_rate int [not null]
  analysis_channels int [not null]
  end_of_fade_in numeric [not null]
  start_of_fade_out numeric [not null]
  loudness numeric [not null]
  tempo numeric [not null]
  tempo_confidence numeric [not null]
  time_signature int [not null]
  time_signature_confidence numeric [not null]
  key int [not null]
  key_confidence numeric [not null]
  mode int [not null]
  mode_confidence numeric [not null]
  codetext text [not null]
  code_version numeric [not null]
  echoprinttext text [not null]
  echoprint_version numeric [not null]
  synchtext text [not null]
  synch_version numeric [not null]
  rhythmtext text [not null]
  rhythm_version numeric [not null]
  indexes {
    (track_audio_analysis_id) [pk]
    track_id [unique]
  }
 }

table track_bar {
  track_bar_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  track_id int [not null, ref: > track.track_id]
  start numeric [not null]
  duration numeric [not null]
  confidence numeric [not null]
  indexes {
    (track_bar_id) [pk]
    (track_id, start) [unique]
  }
}

table track_beat {
  track_beat_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  track_id int [not null, ref: > track.track_id]
  start numeric [not null]
  duration numeric [not null]
  confidence numeric [not null]
  indexes {
    (track_beat_id) [pk]
    (track_id, start) [unique]
  }
}

table track_tatum {
  track_tatum_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  track_id int [not null, ref: > track.track_id]
  start numeric [not null]
  duration numeric [not null]
  confidence numeric [not null]
  indexes {
    (track_tatum_id) [pk]
    (track_id, start) [unique]
  }
}

table track_section {
  track_section_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  track_id int [not null, ref: > track.track_id]
  start numeric [not null]
  duration numeric [not null]
  confidence numeric [not null]
  loudness numeric [not null]
  tempo numeric [not null]
  tempo_confidence numeric [not null]
  key int [not null]
  key_confidence numeric [not null]
  mode int [not null]
  mode_confidence numeric [not null]
  time_signature int [not null]
  time_signature_confidence numeric [not null]
  indexes {
    (track_section_id) [pk]
    (track_id, start) [unique]
  }
}

table track_segment {
  track_segment_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  track_id int [not null, ref: > track.track_id]
  start numeric [not null]
  duration numeric [not null]
  confidence numeric [not null]
  loudness_start numeric [not null]
  loudness_max_time numeric [not null]
  loudness_max numeric [not null]
  loudness_end numeric [not null]
  indexes {
    (track_segment_id) [pk]
    (track_id, start) [unique]
  }
}

table track_segment_pitch {
  track_segment_pitch_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  track_segment_id int [not null, ref: > track_segment.track_segment_id]   
  pitch numeric [not null]
  indexes {
    (track_segment_pitch_id) [pk]
    (track_segment_id, pitch) [unique]
  }
}

table track_segment_timbre {
  track_segment_timbre_id int [pk, increment]
  created_at timestamp [default: `now()`]
  modified_at timestamp
  track_segment_id int [not null, ref: > track_segment.track_segment_id]   
  timbre numeric [not null]
  indexes {
    (track_segment_timbre_id) [pk]
    (track_segment_id, timbre) [unique]
  }
}

enum genre {
  "dance pop"
  "latin"
  "miami hip hop"
  "pop"
  "pop dance"
  "pop rap"
}
