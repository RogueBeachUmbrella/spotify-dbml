table artists {
  artists_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  id varchar [not null]
  name varchar [not null]
  popularity int [not null]
  type varchar [not null]
  uri varchar [not null]
  followers int [not null]
  spotify_url varchar [not null]
  indexes{
    (artists_id) [pk]
    id [unique]
  }
}

table artist_images {
  artist_images_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  artists_id int [not null, ref: > artists.artists_id]
  height int [not null]
  url varchar [not null]
  width int [not null]
  indexes{
    (artist_images_id) [pk]
    url [unique]
  }
}

table related_artists {
  related_artists_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  artists_id int [not null, ref: > artists.artists_id]
  related_id int [not null, ref: > artists.artists_id]
  indexes {
    (related_artists_id) 
    (artists_id, related_id) [unique]
  }
}

table artist_genre {
  artist_genre_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  artist_id int [not null, ref: > artists.artists_id]
  genre genre [not null]
  indexes {
    (artist_genre_id) [pk]
    (artist_id, genre) [unique]
  }
}

table album {
  album_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  id varchar [not null]
  album_group varchar [not null]
  album_type varchar [not null]
  name varchar [not null]
  release_date varchar [not null]
  release_date_precision varchar [not null]
  total_tracks int [not null]
  type varchar [not null]
  uri varchar [not null]
  spotify_url varchar [not null]
  indexes {
    (album_id) [pk]
    id [unique]
  }
}

table album_artist {
  album_artist_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  artists_id int [not null, ref: > artists.artists_id]
  album_id int [not null, ref: > album.album_id]
  indexes {
    (album_artist_id) [pk]
    (artists_id, album_id)
  }
}

table album_images {
  album_images_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  album_id int [not null,ref: > album.album_id]
  height int [not null]
  url varchar [not null]
  width int [not null]
  indexes {
    (album_images_id) [pk]
    (album_id, url)
  }
}

table track {
  track_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  disc_number int [not null]
  duration_ms int [not null]
  explicit boolean [not null]
  name varchar [not null]
  popularity int [not null]
  preview_url varchar [not null]
  track_number int [not null]
  type varchar [not null]
  uri varchar [not null]
  spotify_url varchar [not null]
  id varchar [not null]
  indexes {
    (track_id) [pk]
    id [unique]
  }
}

table track_artist {
  track_artist_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  track_id int [not null, ref: > track.track_id]
  artists_id int [not null, ref: > artists.artists_id]
  indexes {
    (track_artist_id) [pk]
    (track_id, artists_id) [unique]
  }
}

table track_album {
  track_album_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  track_id int [not null, ref: > track.track_id]
  album_id int [not null, ref: > album.album_id]
  indexes {
    (track_album_id) [pk]
    (track_id, album_id) [unique]
  }
}

table track_features {
  track_features_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  track_id int [not null, ref: > track.track_id]
  danceability decimal [not null]
  energy decimal [not null]
  key int [not null]
  loudness decimal [not null]
  mode int [not null]
  speechiness decimal [not null]
  acousticness decimal [not null]
  instrumentalness decimal [not null]
  liveness decimal [not null]
  valence decimal [not null]
  tempo decimal [not null]
  duration_ms int [not null]
  time_signature int [not null]
  indexes {
    (track_features_id) [pk]
    track_id [unique]
  }
}

table track_audio_analysis {
  track_audio_analysis_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  track_id int [not null, ref: > track.track_id]
  num_samples int [not null]
  duration decimal [not null]
  sample_md5 string [not null]
  offset_seconds int [not null]
  window_seconds int [not null]
  analysis_sample_rate int [not null]
  analysis_channels int [not null]
  end_of_fade_in decimal [not null]
  start_of_fade_out decimal [not null]
  loudness decimal [not null]
  tempo decimal [not null]
  tempo_confidence decimal [not null]
  time_signature int [not null]
  time_signature_confidence decimal [not null]
  key int [not null]
  key_confidence decimal [not null]
  mode int [not null]
  mode_confidence decimal [not null]
  codestring string [not null]
  code_version decimal [not null]
  echoprintstring string [not null]
  echoprint_version decimal [not null]
  synchstring string [not null]
  synch_version decimal [not null]
  rhythmstring string [not null]
  rhythm_version decimal [not null]
  indexes {
    (track_audio_analysis_id) [pk]
    track_id [unique]
  }
 }

table track_bars {
  track_bars_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  track_id int [not null, ref: > track.track_id]
  start decimal [not null]
  duration decimal [not null]
  confidence decimal [not null]
  indexes {
    (track_bars_id) [pk]
    (track_id, start) [unique]
  }
}

table track_beat {
  track_beat_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  track_id int [not null, ref: > track.track_id]
  start decimal [not null]
  duration decimal [not null]
  confidence decimal [not null]
  indexes {
    (track_beat_id) [pk]
    (track_id, start) [unique]
  }
}

table track_tatum {
  track_tatum_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  track_id int [not null, ref: > track.track_id]
  start decimal [not null]
  duration decimal [not null]
  confidence decimal [not null]
  indexes {
    (track_tatum_id) [pk]
    (track_id, start) [unique]
  }
}

table track_section {
  track_section_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  track_id int [not null, ref: > track.track_id]
  start decimal [not null]
  duration decimal [not null]
  confidence decimal [not null]
  loudness decimal [not null]
  tempo decimal [not null]
  tempo_confidence decimal [not null]
  key int [not null]
  key_confidence decimal [not null]
  mode int [not null]
  mode_confidence decimal [not null]
  time_signature int [not null]
  time_signature_confidence decimal [not null]
  indexes {
    (track_section_id) [pk]
    (track_id, start) [unique]
  }
}

table track_segment {
  track_segment_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  track_id int [not null, ref: > track.track_id]
  start decimal [not null]
  duration decimal [not null]
  confidence decimal [not null]
  loudness_start decimal [not null]
  loudness_max_time decimal [not null]
  loudness_max decimal [not null]
  loudness_end decimal [not null]
  indexes {
    (track_segment_id) [pk]
    (track_id, start) [unique]
  }
}

table track_segment_pitch {
  track_segment_pitch_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  track_segment_id int [not null, ref: > track_segment.track_segment_id]   
  pitch decimal [not null]
  indexes {
    (track_segment_pitch_id) [pk]
    (track_segment_id, pitch) [unique]
  }
}

table track_segment_timbre {
  track_segment_timbre_id int [pk, increment]
  created_at datetime [default: `now()`]
  modified_at datetime
  track_segment_id int [not null, ref: > track_segment.track_segment_id]   
  timbre decimal [not null]
  indexes {
    (track_segment_timbre_id) [pk]
    (track_segment_id, timbre) [unique]
  }
}

enum genre {
  "dance pop"
  "latin"
  "miami hip hop"
  "pop"
  "pop dance"
  "pop rap"
}
